myh5.info.keys()
myh5.info.items()
myh5.update_files()
reload(open_h5)
myh5 = open_h5.h5_scan()
myh5.update_files()
myh5.info['entry/data/meta']['fnamelist']
myh5.update_spec()
myh5.info['entry/data/spec']['info']['shape']
myh5.info['entry/data/spec']['info'].keys()
reload(open_h5)
sys.path.append(os.path.abspath("/data/id13/inhouse2/AJ/skript"))
import fileIO.hdf5.open_h5 as open_h5

myh5 = open_h5.h5_scan()
myh5.update_files()
myh5.info['entry/data/meta']['fnamelist']
myh5.update_spec()
myh5.info['entry/data/spec']['info'].keys()
myh5.info['entry/data/spec']['info']['shape']
myh5.info['entry/data/spec']['info']['counter']

myh5.write_self('test/test1.h5')
readfile = h5py.File('test/test1.h5')
specinfo = ast.literal_eval((readfile['entry/data/spec'].value))
type(specinfo) == dict


myh5.update_meta('troi',((100,200),(500,200)))
myh5.update_meta('poni','/data/id13/inhouse6/THEDATA_I6_1/d_2016-11-17_inh_ihsc1404/PROCESS/aj_log/calib/calib1_prelim.poni')
myh5.create_poni_for_troi(troiname = 'testtroi')

myh5.write_self('test/test1.h5')
readh5 = read_self('test/test1.h5')


fname = '/data/id13/inhouse6/THEDATA_I6_1/d_2016-11-17_inh_ihsc1404/DATA/AUTO-TRANSFER/eiger1/AJ2c_after_T2_yzth_1580_393_data_000001.h5'
group="entry/data/data"
f= h5py.File(fname, "r")
print 'found shape = '
print f[group].shape
import h5py
f       = h5py.File(fname, "r")
print 'found shape = '
print f[group].shape
framelist = slice(0,f[group].shape[0],1)
troi = ((928,293),(37,12))
from simplecalc.slicing import troi_to_slice
data     = f[group][framelist][troi_to_slice(troi)]


reload(h5)
myh5 = h5.h5_scan()
myh5.read_self('test/test.h5')

myh5.update_meta('troi',troi)
myh5.update_meta('troiname','smalltroi')
myh5.create_poni_for_troi()
myh5.read_data()

# for calibrant:
troi = [[1640, 0], [525, 519]]
def initcalib():
       ....:     reload(h5)
       ....:     calib = h5.h5_scan()
       ....:     calib.read_self('/mntdirect/_data_id13_inhouse6/THEDATA_I6_1/d_2016-11-17_inh_ihsc1404/PROCESS/SESSION23/integrated/al2o3_c/al2o3_calib1_131_integrated.h5')
calib = initcalib()
qsum = np.sum(calib.info['roi_q'],axis = 2)
realsum = np.sum(calib.info['roi_real'],axis = 2)
