import numpy as np
import sys, os
import matplotlib.pyplot as plt

def open_data(filename, delimiter = ' ', quotecharlist= ['#'],verbose = False):
    '''reads <filename> as a <delimiter> seperated datafile and returns the data as np.array \n ignores lines staring with something in quotecharlist '''
    
    data = []
    f = open(filename, 'r')
    reader = f.readlines()
    
    if verbose:
        print('read lines:')

    header = []
    for i, l in enumerate(reader):
        try:
            
            if not l[0].lstrip()[0] in quotecharlist:
                data.append([float(x) for x in (l.rstrip().split(delimiter))])
            else:
                header.append((l.rstrip().split(delimiter)))
        except IndexError:
            if verbose:
                print('discarding:')
                print l

    if verbose:
        print(data)
        
    data = np.asarray(data)
    return data, header

def main(filenames):

    for filename in filenames:
        data = open_data(filename)

        plt.plot(data)
        plt.show()
    
if __name__ == '__main__':
  
    usage =""" \n1) python <thisfile.py> <arg1> <arg2> etc. 
\n2) python <thisfile.py> -f <file containing args as lines> 
\n3) find <*yoursearch* -> arg1 etc.> | python <thisfile.py> 
"""
  
    args = []
    if len(sys.argv) > 1:
        if sys.argv[1].find("-f")!= -1:
            f = open(sys.argv[2]) 
            for line in f:
                args.append(line.rstrip())
        else:
            args=sys.argv[1:]
    else:
        f = sys.stdin
        for line in f:
            args.append(line.rstrip())
    
#    print args
    main(args)
