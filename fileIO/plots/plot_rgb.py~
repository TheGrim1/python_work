
# global imports

import sys, os
import matplotlib.pyplot as plt
import time
from matplotlib.colors import LogNorm

# local imports
# local imports
sys.path.append(os.path.abspath("/data/id13/inhouse2/AJ/skript"))
from fileIO.edf.open_edf import open_edf
from fileIO.hdf5.open_h5 import open_h5



def plot_array(data,
            index    = 0,
            savename = None,
            title    = "Title"):
    'plots the data (nparray) at frame index (if it is 3D). If savename is not None, it saves the plot there. Plotted with title = title.'



## timing
#    print "before plotting1 : %s" %time.time()
## size## size## size## size## size## size## size## size## size## size## size## 
    fig = plt.figure()
    ax1 = fig.add_subplot(1,1,1,axisbg = (0.9, 0.9, 0.95))
    ax1.figure.set_size_inches(2,5)

    dimension = len(data.shape)
#    print "dimension of data to be plotted is %s" % dimension

    if dimension == 3:
        tobeplotted = data[index,:,:] 
    elif dimension == 2:
        tobeplotted = data[:,:] 
    elif dimension not in (2,3):
        print "invalid data for plotting \ntitle  : %s\n%s" % (title, dimension)
        raise IndexError
## timing
#    print "before plotting2 : %s" %time.time()

## color ## color ## color ## color ## color ## color ## color ## color ## color 

    cmin=max(data.min(),0.00001)
    cmax=max(data.max(),0.01)
    ax1.imshow(tobeplotted, norm=LogNorm(vmin = cmin,vmax =cmax), cmap='Greys')

## timing
#    print "after plotting1 : %s" %time.time()

## Labels## Labels## Labels## Labels## Labels## Labels## Labels## Labels
    plt.tight_layout()
    ax1.set_xticks([])
    ax1.set_xticklabels([])
    ax1.set_yticks([])
    ax1.set_yticklabels([])

## draw some lines ## draw some lines ## draw some lines ## draw some lines 

## in the midle of FOV
#    print ax1.get_ylim()
    
#    ax1.plot((20,20), (0,40) ,color = "black", linewidth = 0.5)
## or here:    
    # ax1.plot((13,0), (60,60) ,color = "black", linewidth = 0.5)
    # ax1.plot((13,0), (120,120) ,color = "black", linewidth = 0.5)
    # ax1.plot((13,0), (180,180) ,color = "black", linewidth = 0.5)

#    rroi = ((928,293),(37,44))	
#    m2roi = ((928,339),(37,16))
#    m1roi   = ((928,355), (37, 55))
#    mroi   = ((926, 268), (40, 65))

#    ax1 = draw_lines_troi(troi = m1roi, color = "blue", axes = ax1, fov =(784,135))
#    ax1 = draw_lines_troi(troi = m2roi, color = "green", axes = ax1, fov =(784,135))
#    ax1 = draw_lines_troi(troi = rroi, color = "red", axes = ax1, fov =(784,135))

    if savename != None:
        print "saving plot as: \n%s" %savename
        plt.savefig(savename, transparent = True, bbox_incens = "tight")

#    plt.title(title)

    plt.show()    
    ax1.clear()
    fig.clf()
